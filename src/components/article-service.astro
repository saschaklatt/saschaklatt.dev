---
import type {CollectionEntry} from "astro:content";
import {numToPx} from "../helpers/converter-helpers";
import {getBreakpoints} from "../helpers/tailwind-helpers";

interface Props {
    service: CollectionEntry<"services">;
    reverse?: boolean;
}

const {service, reverse} = Astro.props;
const breakpoints = getBreakpoints();
---

<article
    class:list={[
        "flex items-center relative flex-col gap-y-8",
        reverse ? "md:flex-row-reverse" : "md:flex-row",
        "before:content-[' '] before:absolute before:bg-white before:rounded-full before:opacity-10 before:left-1/2 before:-translate-x-1/2",
        "before:-top-28 before:h-16 before:w-1",
        "md:before:-top-36 md:before:h-24 md:before:w-1.5",
    ]}
    id={service.id}
>
    <div class:list={["flex-1", reverse ? "md:text-left" : "md:text-right"]}>
        <h3 class="text-xl md:text-3xl font-extrabold opacity-90">{service.data.title}</h3>
        <p class="opacity-75 font-light mt-4 md:mt-6 text-base md:text-lg">{service.body}</p>
    </div>
    <div class:list={["flex-1 flex w-full", reverse ? "justify-start" : "justify-end"]}>
        <picture class="mx-auto flex w-full">
            <source
                srcset={`/img/illustrations/${service.data.imageBaseName}.webp, /img/illustrations/${service.data.imageBaseName}@2x.webp 2x`}
                media={`(max-width: ${numToPx(breakpoints.md)})`}
            />
            <source
                srcset={`/img/illustrations/${service.data.imageBaseName}.webp, /img/illustrations/${service.data.imageBaseName}@2x.webp 2x`}
                media={`(min-width: ${numToPx(breakpoints.md + 1)})`}
            />
            <img
                src={`/img/illustrations/${service.data.imageBaseName}.webp`}
                alt={service.data.imageAlt}
                loading="lazy"
                class="rounded-lg w-full"
            />
        </picture>
    </div>
</article>
