---
import {Image} from "astro:assets";
import type {Project} from "../data/typedefs";
import IconArrowDown from "./icon-arrow-down.astro";

interface Props {
    project: Project;
}

interface ListItem {
    term: string;
    text: string;
    href?: string;
}

const {project} = Astro.props;

const listItems: ListItem[] = [];

function formatDate(date: Date): string {
    const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    const m = date.getMonth();
    const y = date.getFullYear();
    return `${months[m]} ${y}`;
}

if (project.website) {
    listItems.push({
        term: "Website",
        text: project.website.label,
        href: project.website.href,
    });
}
if (project.dateEnd) {
    listItems.push({
        term: "From / to",
        text: `${formatDate(project.dateStart)} - ${formatDate(project.dateEnd)}`,
    });
} else {
    listItems.push({
        term: "From / to",
        text: `since ${formatDate(project.dateStart)}`,
    });
}
if (project.technologies.length > 0) {
    listItems.push({
        term: "Tech-stack",
        text: project.technologies.map((tech) => tech.name).join(", "),
    });
}
if (project.tools.length > 0) {
    listItems.push({
        term: "Tools",
        text: project.tools.map((tool) => tool.name).join(", "),
    });
}
if (project.employer) {
    listItems.push({
        term: "Employer",
        text: project.employer.name,
    });
}
if (project.client) {
    listItems.push({
        term: "Client",
        text: project.client.name,
    });
}
if (project.partners.length > 0) {
    listItems.push({
        term: "in cooperation with",
        text: `${project.partners.map((partner) => partner.name).join("\n")}`,
    });
}
if (project.industry) {
    listItems.push({
        term: "Industry",
        text: project.industry,
    });
}
if (project.teamSize) {
    listItems.push({
        term: "Team size",
        text: `${project.teamSize.toFixed(0)} team mates`,
    });
}
---

<details
    class:list={[
        "group",
        "border border-neutral-800 rounded-lg",
        "no-tap-highlight",
        "transition-spacing",
        "open:text-neutral-950 open:bg-gradient-to-tr from-neutral-600 to-primary-400 md:open:p-8",
    ]}
>
    <summary
        class:list={[
            "details-summary rounded-lg grid grid-cols-[1fr_min-content]",
            "md:grid-cols-[auto_1fr_auto] md:grid-rows-[auto_auto] md:gap-x-8",
            "md:hover:bg-neutral-800 md:hover:bg-opacity-10",
            "common-focus",
        ]}
    >
        <div
            class:list={[
                "w-full md:row-span-2",
                "transition-all",
                "group-open:scale-95 group-open:mt-1",
                "row-start-1 row-span-1 col-start-1 col-span-3",
                "md:w-60 md:col-span-1 md:row-span-3",
                "md:group-open:w-96 md:group-open:scale-100 md:group-open:mt-0",
            ]}
        >
            <Image
                src={project.image}
                alt={`Screenshot of the project ${project.title}`}
                draggable="false"
                class="group-open:rounded-lg"
            />
        </div>
        <div
            class:list={[
                "font-black mt-4 pl-4",
                "row-start-2",
                "md:pl-0 md:mt-4",
                "md:row-start-1 md:col-start-2",
                "md:group-open:mt-12",
            ]}
        >
            <h3 class="transition-fonts text-2xl font-extrabold md:group-open:text-3xl">{project.title}</h3>
            <p class="font-semibold leading-tight opacity-70 group-open:text-md group-open:font-bold">{project.subline}</p>
        </div>
        <ul
            class:list={[
                "flex gap-2 px-4 my-4",
                "row-start-3  col-start-1 col-span-2",
                "md:px-0",
                "md:row-start-2 md:col-start-2 md:col-span-1",
            ]}
        >
            {project.tags.map((tag) => <li class="hashtag opacity-50 group-open:opacity-70">{tag}</li>)}
        </ul>
        <div
            class:list={[
                "flex flex-0 px-4 mt-4",
                "col-start-3 row-start-2 row-span-2",
                "md:row-start-1 md:row-span-3",
                "md:mx-10",
            ]}
        >
            <IconArrowDown
                class="opacity-25 w-6 max-w-6 transition-transform -rotate-90 group-open:rotate-0 group-open:opacity-75"
            />
        </div>
    </summary>
    <div class="flex gap-8 px-4 pb-4 md:p-0">
        <div class="min-w-[15rem] group-open:min-w-[24rem] items-end hidden md:flex">
            {
                project.client?.logo && (
                    <Image
                        src={project.client.logo}
                        alt={`Logo of the company ${project.client?.name}`}
                        class="w-auto h-10 max-h-10"
                        draggable="false"
                        format="svg"
                    />
                )
            }
        </div>
        <div class="group-open:block">
            <p class="my-8">{project.description}</p>
            <dl class="grid grid-cols-[auto,1fr] items-start gap-x-8 gap-y-2">
                {
                    listItems.map(({term, text, href}) => (
                        <>
                            <dt class="font-extrabold uppercase text-xs col-start-1 leading-loose">{term}</dt>
                            <dd class="col-start-2">
                                {href ? (
                                    <a href={href} class="link" target="_blank" rel="noreferrer noopener nofollow">
                                        {text}
                                    </a>
                                ) : (
                                    <>
                                        {text.split("\n").map((line) => (
                                            <span class="block">{line}</span>
                                        ))}
                                    </>
                                )}
                            </dd>
                        </>
                    ))
                }
            </dl>
        </div>
    </div>
</details>
